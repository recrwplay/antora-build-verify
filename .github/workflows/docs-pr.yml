# This is an example of the docs-build-verify.yml workflow available from the recrwplay org
name: "Verify docs PR"

on:
  pull_request:

jobs:

  build-verify:
    name: Verify Antora log
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      # build and verify

      - id: docs-build-verify
        name: Build and verify
        uses: ./.github/actions/docs/docs-build-verify
        with:
          package-script: 'build-verify'
          fail-on-warnings: true

      # create deploy comment

      - id: antora-component-name
        name: Read antora component name
        uses: jbutcher5/read-yaml@main
        with:
          file: './antora.yml'
          key-path: '["name"]'

      - id: antora-component-version
        name: Read antora component version
        uses: jbutcher5/read-yaml@main
        with:
          file: './antora.yml'
          key-path: '["version"]'

      - id: get-deploy-url
        run: |
          deployurl=${{ github.event.repository.owner.login}}-${{ github.event.repository.name}}-${{ github.event.number }}.surge.sh
          echo "deploy-url=$deployurl" >> $GITHUB_OUTPUT      

      - name: Comment preamble
        run: |
          echo "This PR contains docs changes
          
          You can review the changes at https://${{ steps.get-deploy-url.outputs.deploy-url }}

          Changed files:
          " > deploy-comment
                  
      - name: Add changed files to comment text
        run: |
          gh pr view ${{ github.event.number }} --json files --jq \
          'limit(10; .files.[] | select(.path | contains("/pages/")) as $changes |  (.path | sub("modules/.+/pages/(?<f>.*).adoc"; "- [\(.f)](https://${{ steps.get-deploy-url.outputs.deploy-url }}/${{ steps.antora-component-name.outputs.data }}/${{ steps.antora-component-version.outputs.data }}/\(.f))" ) ) ) ' \
          | npx pino-pretty >> changelog
        env:
          GITHUB_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}

      - name: Save comment text as artifact
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: deploy-comment

          
      # deploy

      # - id: deploy
      #   name: Deploy
      #   if: success() || failure()
      #   uses: ./.github/actions/docs/deploy
      #   with:
      #     surge-token: ${{ secrets.SURGE_TOKEN }}
      #     surge-deploy-url: ${{ github.event.repository.owner.login}}-${{ github.event.repository.name}}-${{ github.event.number }}.surge.sh

      # check all links

      # - id: check-links
      #   if: success() || failure() && contains( github.event.pull_request.labels.*.name, 'check-links')
      #   name: Check links
      #   run: npm run check-links


      # lint tests - new links

      # - id: lint
      #   name: Lint
      #   if: success() || failure()
      #   uses: ./.github/actions/docs/lint/links
      #   with:
      #     git-token: ${{ secrets.PR_COMMENT_TOKEN }}
      #     surge-deploy-url: '${{ github.event.repository.owner.login}}-${{ github.event.repository.name}}-${{ github.event.number }}'
      #     base: ${{ github.base_ref }}
      #     head: ${{ github.head_ref }}

      # - id: vale
      #   name: Vale
      #   if: success() || failure()
      #   uses: ./.github/actions/docs/lint/vale
      #   with:
      #     git-token: ${{ secrets.PR_COMMENT_TOKEN }}
      #     surge-deploy-url: '${{ github.event.repository.owner.login}}-${{ github.event.repository.name}}-${{ github.event.number }}'
      #     base: ${{ github.base_ref }}
      #     head: ${{ github.head_ref }}
      # - id: deploy
      #   name: Deploy to surge
      #   run: |
      #     npm install -g surge
      #     deployurl=${{ github.event.repository.owner.login}}-${{ github.event.repository.name}}-${{ github.event.number }}.surge.sh
      #     surge ./build/site $deployurl --token ${{ secrets.SURGE_TOKEN }}



        # uses: ./.github/actions/docs/deploy
        # with:
        #   surge-tokem: ${{ secrets.SURGE_TOKEN }}
        #   surge-deploy-url: ${{ github.event.repository.owner.login}}-${{ github.event.repository.name}}-${{ github.event.number }}.surge.sh




